Index: my-app/src/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/index.js b/my-app/src/index.js
--- a/my-app/src/index.js	(revision d08d4d84e82b3a5605436916191bf7779dc68474)
+++ b/my-app/src/index.js	(date 1623933386897)
@@ -1,12 +1,19 @@
 import React from 'react';
 import ReactDOM from 'react-dom';
+import {Provider} from 'react-redux';
+import{createStore} from 'redux';
+import allRedusers from './redusers';
 import './index.css';
 import App from './App';
 import reportWebVitals from './reportWebVitals';
 
+const store = createStore(allRedusers);
+
 ReactDOM.render(
   <React.StrictMode>
-    <App />
+      <Provider store={store}>
+         <App />
+      </Provider>
   </React.StrictMode>,
   document.getElementById('root')
 );
Index: my-app/src/components/filters.js
===================================================================
diff --git a/my-app/src/components/filters.js b/my-app/src/components/filters.js
deleted file mode 100644
--- a/my-app/src/components/filters.js	(revision d08d4d84e82b3a5605436916191bf7779dc68474)
+++ /dev/null	(revision d08d4d84e82b3a5605436916191bf7779dc68474)
@@ -1,34 +0,0 @@
-import React from "react"
-
-const Filter = ({ setFilter, currentFilter }) => {
-	return (
-		<>
-			<button
-				className="btn-sm btn-primary mr-2"
-				onClick={() => {
-					setFilter("all")
-				}}
-			>
-				All
-			</button>
-			<button
-				className="btn-sm btn-warning mr-2"
-				onClick={() => {
-					setFilter("doing")
-				}}
-			>
-				Doing
-			</button>
-			<button
-				className="btn-sm btn-secondary mr-4"
-				onClick={() => {
-					setFilter("done")
-				}}
-			>
-				Done
-			</button>
-		</>
-	)
-}
-
-export default Filter
\ No newline at end of file
Index: my-app/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"name\": \"my-app\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@material-ui/core\": \"^4.11.4\",\n    \"@material-ui/icons\": \"^4.11.2\",\n    \"@testing-library/jest-dom\": \"^5.13.0\",\n    \"@testing-library/react\": \"^11.2.7\",\n    \"@testing-library/user-event\": \"^12.8.3\",\n    \"fontsource-roboto\": \"^4.0.0\",\n    \"react\": \"^17.0.2\",\n    \"react-dom\": \"^17.0.2\",\n    \"react-scripts\": \"4.0.3\",\n    \"web-vitals\": \"^1.1.2\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"react-app\",\n      \"react-app/jest\"\n    ]\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/package.json b/my-app/package.json
--- a/my-app/package.json	(revision d08d4d84e82b3a5605436916191bf7779dc68474)
+++ b/my-app/package.json	(date 1623927481951)
@@ -11,7 +11,12 @@
     "fontsource-roboto": "^4.0.0",
     "react": "^17.0.2",
     "react-dom": "^17.0.2",
+    "react-redux": "^7.2.4",
     "react-scripts": "4.0.3",
+    "redux": "^4.1.0",
+    "redux-logger": "^3.0.6",
+    "redux-promise": "^0.6.0",
+    "redux-thunk": "^2.3.0",
     "web-vitals": "^1.1.2"
   },
   "scripts": {
Index: my-app/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/package-lock.json b/my-app/package-lock.json
--- a/my-app/package-lock.json	(revision d08d4d84e82b3a5605436916191bf7779dc68474)
+++ b/my-app/package-lock.json	(date 1623927482350)
@@ -2367,6 +2367,15 @@
         "@types/node": "*"
       }
     },
+    "@types/hoist-non-react-statics": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/@types/hoist-non-react-statics/-/hoist-non-react-statics-3.3.1.tgz",
+      "integrity": "sha512-iMIqiko6ooLrTh1joXodJK5X9xeEALT1kM5G3ZLhD3hszxBdIEd5C75U834D9mLcINgD4OyZf5uQXjkuYydWvA==",
+      "requires": {
+        "@types/react": "*",
+        "hoist-non-react-statics": "^3.3.0"
+      }
+    },
     "@types/html-minifier-terser": {
       "version": "5.1.1",
       "resolved": "https://registry.npmjs.org/@types/html-minifier-terser/-/html-minifier-terser-5.1.1.tgz",
@@ -2464,6 +2473,17 @@
         }
       }
     },
+    "@types/react-redux": {
+      "version": "7.1.16",
+      "resolved": "https://registry.npmjs.org/@types/react-redux/-/react-redux-7.1.16.tgz",
+      "integrity": "sha512-f/FKzIrZwZk7YEO9E1yoxIuDNRiDducxkFlkw/GNMGEnK9n4K8wJzlJBghpSuOVDgEUHoDkDF7Gi9lHNQR4siw==",
+      "requires": {
+        "@types/hoist-non-react-statics": "^3.3.0",
+        "@types/react": "*",
+        "hoist-non-react-statics": "^3.3.0",
+        "redux": "^4.0.0"
+      }
+    },
     "@types/react-transition-group": {
       "version": "4.4.1",
       "resolved": "https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-4.4.1.tgz",
@@ -3740,6 +3760,15 @@
       "integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==",
       "optional": true
     },
+    "bindings": {
+      "version": "1.5.0",
+      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
+      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
+      "optional": true,
+      "requires": {
+        "file-uri-to-path": "1.0.0"
+      }
+    },
     "bluebird": {
       "version": "3.7.2",
       "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
@@ -4976,6 +5005,11 @@
       "resolved": "https://registry.npmjs.org/dedent/-/dedent-0.7.0.tgz",
       "integrity": "sha1-JJXduvbrh0q7Dhvp3yLS5aVEMmw="
     },
+    "deep-diff": {
+      "version": "0.3.8",
+      "resolved": "https://registry.npmjs.org/deep-diff/-/deep-diff-0.3.8.tgz",
+      "integrity": "sha1-wB3mPvsO7JeYgB1Ax+Da4ltYLIQ="
+    },
     "deep-equal": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-1.1.1.tgz",
@@ -6671,6 +6705,12 @@
         }
       }
     },
+    "file-uri-to-path": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
+      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==",
+      "optional": true
+    },
     "filesize": {
       "version": "6.1.0",
       "resolved": "https://registry.npmjs.org/filesize/-/filesize-6.1.0.tgz",
@@ -6784,6 +6824,14 @@
         }
       }
     },
+    "flux-standard-action": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/flux-standard-action/-/flux-standard-action-2.1.1.tgz",
+      "integrity": "sha512-W86GzmXmIiTVq/dpYVd2HtTIUX9c35Iq3ao3xR6qcKtuXgbu+BDEj72op5VnEIe/kpuSbhl+I8kT1iS2hpcusw==",
+      "requires": {
+        "lodash": "^4.17.15"
+      }
+    },
     "follow-redirects": {
       "version": "1.14.1",
       "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.1.tgz",
@@ -8058,6 +8106,11 @@
       "resolved": "https://registry.npmjs.org/is-potential-custom-element-name/-/is-potential-custom-element-name-1.0.1.tgz",
       "integrity": "sha512-bCYeRA2rVibKZd+s2625gGnGF/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPKJ1hrN3nzPNKFEKOUiQ=="
     },
+    "is-promise": {
+      "version": "2.2.2",
+      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.2.2.tgz",
+      "integrity": "sha512-+lP4/6lKUBfQjZ2pdxThZvLUAafmZb8OAxFb8XXtiQmS35INgr85hdOGoEs124ez1FCnZJt6jau/T+alh58QFQ=="
+    },
     "is-regex": {
       "version": "1.1.3",
       "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.1.3.tgz",
@@ -10472,6 +10525,12 @@
       "resolved": "https://registry.npmjs.org/multicast-dns-service-types/-/multicast-dns-service-types-1.1.0.tgz",
       "integrity": "sha1-iZ8R2WhuXgXLkbNdXw5jt3PPyQE="
     },
+    "nan": {
+      "version": "2.14.2",
+      "resolved": "https://registry.npmjs.org/nan/-/nan-2.14.2.tgz",
+      "integrity": "sha512-M2ufzIiINKCuDfBSAUr1vWQ+vuVcA9kqx8JJUsbQi6yf1uGRyb7HfpdfUr5qLXf3B/t8dPvcjhKMmlfnP47EzQ==",
+      "optional": true
+    },
     "nanoid": {
       "version": "3.1.23",
       "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.1.23.tgz",
@@ -12763,6 +12822,19 @@
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
       "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
     },
+    "react-redux": {
+      "version": "7.2.4",
+      "resolved": "https://registry.npmjs.org/react-redux/-/react-redux-7.2.4.tgz",
+      "integrity": "sha512-hOQ5eOSkEJEXdpIKbnRyl04LhaWabkDPV+Ix97wqQX3T3d2NQ8DUblNXXtNMavc7DpswyQM6xfaN4HQDKNY2JA==",
+      "requires": {
+        "@babel/runtime": "^7.12.1",
+        "@types/react-redux": "^7.1.16",
+        "hoist-non-react-statics": "^3.3.2",
+        "loose-envify": "^1.4.0",
+        "prop-types": "^15.7.2",
+        "react-is": "^16.13.1"
+      }
+    },
     "react-refresh": {
       "version": "0.8.3",
       "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.8.3.tgz",
@@ -12960,6 +13032,36 @@
         "strip-indent": "^3.0.0"
       }
     },
+    "redux": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/redux/-/redux-4.1.0.tgz",
+      "integrity": "sha512-uI2dQN43zqLWCt6B/BMGRMY6db7TTY4qeHHfGeKb3EOhmOKjU3KdWvNLJyqaHRksv/ErdNH7cFZWg9jXtewy4g==",
+      "requires": {
+        "@babel/runtime": "^7.9.2"
+      }
+    },
+    "redux-logger": {
+      "version": "3.0.6",
+      "resolved": "https://registry.npmjs.org/redux-logger/-/redux-logger-3.0.6.tgz",
+      "integrity": "sha1-91VZZvMJjzyIYExEnPC69XeCdL8=",
+      "requires": {
+        "deep-diff": "^0.3.5"
+      }
+    },
+    "redux-promise": {
+      "version": "0.6.0",
+      "resolved": "https://registry.npmjs.org/redux-promise/-/redux-promise-0.6.0.tgz",
+      "integrity": "sha512-R2mGxJbPFgXyCNbFDE6LjTZhCEuACF54g1bxld3nqBhnRMX0OsUyWk77moF7UMGkUdl5WOAwc4BC5jOd1dunqQ==",
+      "requires": {
+        "flux-standard-action": "^2.0.3",
+        "is-promise": "^2.1.0"
+      }
+    },
+    "redux-thunk": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/redux-thunk/-/redux-thunk-2.3.0.tgz",
+      "integrity": "sha512-km6dclyFnmcvxhAcrQV2AkZmPQjzPDjgVlQtR0EQjxZPyJ0BnMf3in1ryuR8A2qU0HldVRfxYXbFSKlI3N7Slw=="
+    },
     "regenerate": {
       "version": "1.4.2",
       "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz",
@@ -15410,7 +15512,11 @@
           "version": "1.2.13",
           "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.13.tgz",
           "integrity": "sha512-oWb1Z6mkHIskLzEJ/XWX0srkpkTQ7vaopMQkyaEIoq0fmtFVxOthb8cCxeT+p3ynTdkk/RZwbgG4brR5BeWECw==",
-          "optional": true
+          "optional": true,
+          "requires": {
+            "bindings": "^1.5.0",
+            "nan": "^2.12.1"
+          }
         },
         "glob-parent": {
           "version": "3.1.0",
@@ -16009,7 +16115,11 @@
           "version": "1.2.13",
           "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.13.tgz",
           "integrity": "sha512-oWb1Z6mkHIskLzEJ/XWX0srkpkTQ7vaopMQkyaEIoq0fmtFVxOthb8cCxeT+p3ynTdkk/RZwbgG4brR5BeWECw==",
-          "optional": true
+          "optional": true,
+          "requires": {
+            "bindings": "^1.5.0",
+            "nan": "^2.12.1"
+          }
         },
         "glob-parent": {
           "version": "3.1.0",
Index: my-app/src/redusers/all.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/redusers/all.js b/my-app/src/redusers/all.js
new file mode 100644
--- /dev/null	(date 1623940525908)
+++ b/my-app/src/redusers/all.js	(date 1623940525908)
@@ -0,0 +1,4 @@
+
+export default function () {
+    return todos
+}
\ No newline at end of file
Index: my-app/src/redusers/active.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/redusers/active.js b/my-app/src/redusers/active.js
new file mode 100644
--- /dev/null	(date 1623940456670)
+++ b/my-app/src/redusers/active.js	(date 1623940456670)
@@ -0,0 +1,3 @@
+export default function () {
+    return this.state.filter((todo) => !todo.complete)
+}
\ No newline at end of file
Index: my-app/src/redusers/completed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/redusers/completed.js b/my-app/src/redusers/completed.js
new file mode 100644
--- /dev/null	(date 1623940456667)
+++ b/my-app/src/redusers/completed.js	(date 1623940456667)
@@ -0,0 +1,3 @@
+export default function () {
+    return this.state.filter((todo) => todo.complete)
+}
Index: my-app/src/components/TodoApp.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/components/TodoApp.jsx b/my-app/src/components/TodoApp.jsx
new file mode 100644
--- /dev/null	(date 1623936885251)
+++ b/my-app/src/components/TodoApp.jsx	(date 1623936885251)
@@ -0,0 +1,87 @@
+import React from 'react';
+import Header from './Header';
+import TodoForm from './TodoForm'
+import Todo from './Todo';
+import ControlPalel from './ControlPanel';
+import Paper from '@material-ui/core/Paper';
+import Container from '@material-ui/core/Container';
+
+
+function TodoApp() {
+
+    const [todos, setTodos] = React.useState([])
+
+    // function selectTodos(todos, filter) {
+    //     switch (filter) {
+    //         case VisibilityFilters.SHOW_ALL:
+    //             return todos;
+    //         case VisibilityFilters.SHOW_COMPLETED:
+    //             return todos.filter(todo => todo.completed);
+    //         case VisibilityFilters.SHOW_ACTIVE:
+    //             return todos.filter(todo => !todo.completed);
+    //     }
+    // }
+
+    const addTask = (userInput) => {
+        if(userInput) {
+            const newTodo = {
+                id: Math.random().toString(36).substr(2,9),
+                task: userInput,
+                complete: false
+            }
+            setTodos([...todos, newTodo])
+        }
+    }
+
+    const removeTask = (id) => {
+        setTodos([...todos.filter((todo) => todo.id !== id)])
+    }
+
+    function clearCompleted() {
+        setTodos([...todos.filter((todo) => !todo.complete)])
+    }
+
+    const handleToggle = (id) => {
+        setTodos([
+            ...todos.map((todo) =>
+                todo.id === id ? { ...todo, complete: !todo.complete } : {...todo }
+            )
+        ])
+    }
+
+
+
+
+    let completeTasks = [...todos].filter(todo => todo.complete)
+    let activeTasks = [...todos].filter(todo => !todo.complete)
+
+
+    return (
+        <Container maxWidth="sm">
+            <Header />
+            <Paper id="paper" square>
+                <TodoForm addTask={addTask} />
+                {todos.map((todo) => {
+                    return (
+                        <Todo
+                            todo={todo}
+                            key={todo.id}
+                            toggleTask={handleToggle}
+                            removeTask={removeTask}
+                        />
+                    )
+                })}
+                {(todos.length>0)&&<ControlPalel todos={todos}
+
+                                                 compliteTasks={completeTasks.length}
+                                                 activeTasks={activeTasks.length}
+                                                 clearCompleted={clearCompleted}
+
+                />}
+            </Paper>
+        </Container>
+    );
+
+}
+
+export default TodoApp;
\ No newline at end of file
Index: my-app/src/components/actionCreator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/components/actionCreator.js b/my-app/src/components/actionCreator.js
new file mode 100644
--- /dev/null	(date 1623939302443)
+++ b/my-app/src/components/actionCreator.js	(date 1623939302443)
@@ -0,0 +1,24 @@
+import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO, SET_VISIBILITY_FILTER } from './actionsTypes'
+
+let TodoId = 2
+
+export const addTodo = text => ({
+    type: ADD_TODO,
+    id: TodoId++,
+    text
+})
+
+export const deleteTodo = (id) => ({
+    type: REMOVE_TODO,
+    id: id
+})
+
+export const toggleTodo = (id) => ({
+    type: TOGGLE_TODO,
+    id: id
+})
+
+export const setVisibilityFilter = filter => ({
+    type: SET_VISIBILITY_FILTER,
+    filter
+})
\ No newline at end of file
Index: my-app/src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport TodoForm from './components/TodoForm'\nimport Todo from './components/Todo';\nimport ControlPalel from './components/ControlPanel';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\n\n\nfunction App() {\n\n\n\n    const [todos, setTodos] = React.useState([])\n    const [tasks, setFilter] = React.useState(todos)\n    const addTask = (userInput) => {\n        if(userInput) {\n            const newItem = {\n                id: Math.random().toString(36).substr(2,9),\n                task: userInput,\n                complete: false\n            }\n            setTodos([...todos, newItem])\n        }\n    }\n\n    const removeTask = (id) => {\n        setTodos([...todos.filter((todo) => todo.id !== id)])\n    }\n\n    function clearCompleted() {\n        setTodos([...todos.filter((todo) => !todo.complete)])\n    }\n\n    const handleToggle = (id) => {\n        setTodos([\n            ...todos.map((todo) =>\n                todo.id === id ? { ...todo, complete: !todo.complete } : {...todo }\n            )\n        ])\n    }\n    \n    \n\n    function showTask(chose) {\n        if(chose === 'all') { tasks = allTasks}\n        else if(chose === 'actve') { tasks = activeTasks}\n        else if(chose === 'complited') { tasks = compliteTasks}\n    }\n    \n    let allTasks = todos\n    let compliteTasks = [...todos].filter(todo => todo.complete)\n    let activeTasks = [...todos].filter(todo => !todo.complete)\n\n\n  return (\n      <Container maxWidth=\"sm\">\n        <Header />\n          <Paper id=\"paper\" square>\n              <TodoForm addTask={addTask} />\n              {tasks.map((todo) => {\n                  return (\n                      <Todo\n                          todo={todo}\n                          key={todo.id}\n                          toggleTask={handleToggle}\n                          removeTask={removeTask}\n                      />\n                  )\n              })}\n              {(todos.length>0)&&<ControlPalel todos={todos}\n                                               showTask={showTask}\n                                               compliteTasks={compliteTasks}\n                                               activeTasks={activeTasks}\n                                               clearCompleted={clearCompleted}\n\n              />}\n     </Paper>\n    </Container>\n  );\n\n}\n\nexport default App;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/App.js b/my-app/src/App.js
--- a/my-app/src/App.js	(revision d08d4d84e82b3a5605436916191bf7779dc68474)
+++ b/my-app/src/App.js	(date 1623930552315)
@@ -1,85 +1,12 @@
 import React from 'react';
 import './App.css';
-import Header from './components/Header';
-import TodoForm from './components/TodoForm'
-import Todo from './components/Todo';
-import ControlPalel from './components/ControlPanel';
-import Paper from '@material-ui/core/Paper';
-import Container from '@material-ui/core/Container';
-
+import TodoApp from './components/TodoApp'
 
 function App() {
 
-
-
-    const [todos, setTodos] = React.useState([])
-    const [tasks, setFilter] = React.useState(todos)
-    const addTask = (userInput) => {
-        if(userInput) {
-            const newItem = {
-                id: Math.random().toString(36).substr(2,9),
-                task: userInput,
-                complete: false
-            }
-            setTodos([...todos, newItem])
-        }
-    }
-
-    const removeTask = (id) => {
-        setTodos([...todos.filter((todo) => todo.id !== id)])
-    }
-
-    function clearCompleted() {
-        setTodos([...todos.filter((todo) => !todo.complete)])
-    }
-
-    const handleToggle = (id) => {
-        setTodos([
-            ...todos.map((todo) =>
-                todo.id === id ? { ...todo, complete: !todo.complete } : {...todo }
-            )
-        ])
-    }
-    
-    
-
-    function showTask(chose) {
-        if(chose === 'all') { tasks = allTasks}
-        else if(chose === 'actve') { tasks = activeTasks}
-        else if(chose === 'complited') { tasks = compliteTasks}
-    }
-    
-    let allTasks = todos
-    let compliteTasks = [...todos].filter(todo => todo.complete)
-    let activeTasks = [...todos].filter(todo => !todo.complete)
-
-
   return (
-      <Container maxWidth="sm">
-        <Header />
-          <Paper id="paper" square>
-              <TodoForm addTask={addTask} />
-              {tasks.map((todo) => {
-                  return (
-                      <Todo
-                          todo={todo}
-                          key={todo.id}
-                          toggleTask={handleToggle}
-                          removeTask={removeTask}
-                      />
-                  )
-              })}
-              {(todos.length>0)&&<ControlPalel todos={todos}
-                                               showTask={showTask}
-                                               compliteTasks={compliteTasks}
-                                               activeTasks={activeTasks}
-                                               clearCompleted={clearCompleted}
-
-              />}
-     </Paper>
-    </Container>
+      <TodoApp />
   );
-
 }
 
 export default App;
Index: my-app/src/actions/actionsTypes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/actions/actionsTypes.js b/my-app/src/actions/actionsTypes.js
new file mode 100644
--- /dev/null	(date 1623939461521)
+++ b/my-app/src/actions/actionsTypes.js	(date 1623939461521)
@@ -0,0 +1,7 @@
+export const ADD_TODO = 'ADD_TODO'
+export const TOGGLE_TODO = 'TOGGLE_TODO'
+export const REMOVE_TODO = 'REMOVE_TODO'
+export const SHOW_ALL = 'SHOW_ALL'
+export const SHOW_COMPLETED = 'SHOW_COMPLETED'
+export const SHOW_ACTIVE = 'SHOW_ACTIVE'
+export const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'
\ No newline at end of file
Index: my-app/src/components/ControlPanel.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport '../styles/controlPanel.css';\n\nfunction ControlPanel({ showTask, clearCompleted, activeTasks}) {\n\n\n\n    return (\n        <nav className='controlPanel'>\n            <Typography component=\"h3\" variant=\"inherit\">{activeTasks.length} item left</Typography>\n            <div>\n                <Button onClick={ () => showTask('all')} >All</Button>\n                <Button onClick={ () => showTask('active')} >Active</Button>\n                <Button onClick={ () => showTask('complited')} >Completed</Button>\n            </div>\n            <Typography onClick={ () => clearCompleted()}component=\"h3\" variant=\"inherit\">Clear complited</Typography>\n        </nav>\n    );\n}\n\nexport default ControlPanel
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/components/ControlPanel.jsx b/my-app/src/components/ControlPanel.jsx
--- a/my-app/src/components/ControlPanel.jsx	(revision d08d4d84e82b3a5605436916191bf7779dc68474)
+++ b/my-app/src/components/ControlPanel.jsx	(date 1623930647964)
@@ -2,19 +2,21 @@
 import Typography from '@material-ui/core/Typography';
 import '../styles/controlPanel.css';
 
-function ControlPanel({ showTask, clearCompleted, activeTasks}) {
+function ControlPanel({clearCompleted, activeTasks, completeTasks}) {
 
 
 
     return (
         <nav className='controlPanel'>
-            <Typography component="h3" variant="inherit">{activeTasks.length} item left</Typography>
+            <Typography component="h3" variant="inherit">{activeTasks} item left</Typography>
             <div>
-                <Button onClick={ () => showTask('all')} >All</Button>
-                <Button onClick={ () => showTask('active')} >Active</Button>
-                <Button onClick={ () => showTask('complited')} >Completed</Button>
+                <Button  >All</Button>
+                <Button  >Active</Button>
+                <Button  >Completed</Button>
             </div>
-            <Typography onClick={ () => clearCompleted()}component="h3" variant="inherit">Clear complited</Typography>
+            <Typography onClick={ () => clearCompleted()}
+                                                    component="h3"
+                                                    variant="inherit">Clear complited</Typography>
         </nav>
     );
 }
